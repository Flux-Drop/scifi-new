generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String   @id @default(cuid())
  title       String
  price       Int
  image       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  stock       Int
}

model Banner {
  id           String       @id @default(cuid())
  title        String
  description  String
  image        String
  order        Int          @unique
  bannerStatus BannerStatus @default(ACTIVE)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Order {
  id         String      @id @default(cuid())
  userId     String
  products   Json
  totalPrice Float
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())
}

// Plans Schema 
model PlanCategory {
  id          Int    @id @default(autoincrement())
  name        String //Entertainment Plan or Speed Plan
  description String
  plans       Plan[]
}

model Plan {
  id          Int          @id @default(autoincrement())
  name        String
  category    PlanCategory @relation(fields: [categoryId], references: [id])
  categoryId  Int
  speed       String
  ottServices String[]
  offers      String[]
  pricings    Pricing[]
}

model Pricing {
  id               Int   @id @default(autoincrement())
  plan             Plan  @relation(fields: [planId], references: [id], onDelete: Cascade)
  planId           Int
  durationMonths   Int
  amountWithoutTax Float
  amountWithTax    Float
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum BannerStatus {
  ACTIVE
  INACTIVE
}
